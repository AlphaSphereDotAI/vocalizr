version: 0.1
cli:
  version: 1.25.0
  shell_hooks:
    enforce: true
plugins:
  sources:
    - id: trunk
      ref: v1.7.2
      uri: https://github.com/trunk-io/plugins
    - id: configs
      ref: v1.1.0
      uri: https://github.com/trunk-io/configs
runtimes:
  enabled:
    - node@22.16.0
    - python@3.10.8
lint:
  enabled:
    - trufflehog-git@3.90.8
    - pre-commit-hooks@5.0.0
    - trivy@0.66.0
    - yamlfmt@0.17.2
    - gitleaks@8.28.0
    - actionlint@1.7.7
    - bandit@1.8.6
    - checkov@3.2.471
    - git-diff-check
    - hadolint@2.14.0
    - markdownlint@0.45.0
    - renovate@41.131.4
    - ruff@0.13.2:
        commands:
          - lint
          - format
    - taplo@0.10.0:
        commands:
          - lint
          - format
    - trufflehog@3.90.8
    - yamllint@1.37.1
  disabled:
    - prettier
    - black
    - mypy
    - pylint
    - isort
actions:
  enabled:
    - commitizen
    - trufflehog-pre-commit
    - uv-lock
    - uv-sync
    - trunk-announce
    - trunk-fmt-pre-commit
    - trunk-upgrade-available
    - trunk-check-pre-commit
    - ensure-tag-matches-version
    - update-version-from-tag
  definitions:
    - id: ensure-tag-matches-version
      description: Hooks to ensure git tag matches version in pyproject.toml
      triggers:
        - git_hooks:
            - pre-push
      run: |
        #!/usr/bin/env bash
        set -e

        # Check if we're on main or master branch
        if git rev-parse --abbrev-ref HEAD | grep -q 'main\|master'; then
          # Try to get the tag for the current commit, ignore errors
          TAG=$(git describe --tags --exact-match "$(git log -n1 --pretty='%h')" 2>/dev/null || true)

          # If no tag found, skip validation entirely
          if [ -z "$TAG" ]; then
            echo "No tag found for the current commit - skipping version validation."
            exit 0
          fi

          # Validate it matches pyproject.toml version
          VERSION=$(grep '^version =' pyproject.toml | sed -E 's/version = "(.*)"/\1/' 2>/dev/null || echo "")

          if [ "$TAG" != "$VERSION" ]; then
            echo "Tag '$TAG' does not match version '$VERSION' in pyproject.toml."
            exit 1
          fi

          echo "Tag '$TAG' matches version '$VERSION'."
        else
          echo "Not on main/master branch - skipping tag validation."
        fi
        exit 0
    - id: update-version-from-tag
      description: Update version in pyproject.toml from git tag
      triggers:
        - git_hooks:
            - pre-push
      run: |
        #!/usr/bin/env bash
        set -e

        # Check if we're on main or master branch
        if git rev-parse --abbrev-ref HEAD | grep -q 'main\|master'; then
          # Try to get the tag for the current commit, ignore errors
          TAG=$(git describe --tags --exact-match "$(git log -n1 --pretty='%h')" 2>/dev/null || true)

          # If no tag found, skip updating version entirely
          if [ -z "$TAG" ]; then
            echo "No tag found for the current commit - skipping version update."
            exit 0
          fi

          # Update pyproject.toml version if it differs from the tag
          VERSION=$(grep '^version =' pyproject.toml | sed -E 's/version = "(.*)"/\1/' 2>/dev/null || echo "")

          if [ "$TAG" != "$VERSION" ]; then
            echo "Updating version in pyproject.toml from '$VERSION' to '$TAG'."
            uv version "$TAG"
          else
            echo "Version in pyproject.toml already matches tag '$TAG'."
          fi
        else
          echo "Not on main/master branch - skipping version update."
        fi
        exit 0
tools:
  enabled:
    - uv@0.8.22
